# Generated by Django 2.2 on 2020-03-31 08:06

import django.contrib.gis.db.models.fields
from django.db import connection, migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('catalog', '0007_auto_20190626_1313'),
    ]

    operations = [
        migrations.AlterUniqueTogether(
            name='dataseturi',
            unique_together=set(),
        ),
        migrations.AlterUniqueTogether(
            name='source',
            unique_together=set(),
        ),
        migrations.AddConstraint(
            model_name='dataseturi',
            constraint=models.UniqueConstraint(fields=('uri', 'dataset'), name='unique_dataset_uri'),
        ),
        # Necessary due to sqlite limitations.
        migrations.AddConstraint(
            model_name='geographiclocation',
            constraint=models.UniqueConstraint(
                fields=('geometry',), name='unique_geographic_location'),
        ) if connection.vendor != 'sqlite' else migrations.RunSQL(
            sql='CREATE UNIQUE INDEX unique_catalog_geographiclocation ON catalog_geographiclocation(geometry);',
            reverse_sql='DROP INDEX unique_catalog_geographiclocation',
            state_operations=[
                migrations.AddConstraint(
                model_name='geographiclocation',
                constraint=models.UniqueConstraint(fields=('geometry',), name='unique_geographic_location'))
            ]
        ),
        migrations.AddConstraint(
            model_name='source',
            constraint=models.UniqueConstraint(fields=('platform', 'instrument'), name='unique_source'),
        ),
    ]
