---
sudo: required

env:
  - distribution: ubuntu
    version: xenial
  - distribution: ubuntu
    version: trusty

services:
  - docker

before_install:
  - sudo docker pull ${distribution}:${version}
  - sudo docker build --no-cache --rm --file=tests/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests

install:
  - container_id=$(mktemp)
  - sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${distribution}-${version}:ansible > "${container_id}"
  - sudo docker exec "$(cat ${container_id})" ansible-galaxy install andrewrothstein.miniconda andrewrothstein.conda-env
  - sudo docker exec "$(cat ${container_id})" ansible-playbook -v /etc/ansible/roles/role_under_test/tests/test.yml

script:
  - sudo docker exec "$(cat ${container_id})" /opt/anaconda/envs/py3django/bin/python /opt/project/manage.py startapp testapp
  - sudo docker exec "$(cat ${container_id})" /opt/anaconda/envs/py3django/bin/python /opt/project/manage.py makemigrations
  - sudo docker exec "$(cat ${container_id})" /opt/anaconda/envs/py3django/bin/python /opt/project/manage.py migrate
  - sudo docker exec "$(cat ${container_id})" /opt/anaconda/envs/py3django/bin/python /opt/project/manage.py inspectdb

notifications:
    webhooks: https://galaxy.ansible.com/api/v1/notifications/
