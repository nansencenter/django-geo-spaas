---
name: "Unit tests and build"
on:
  push:
    branches: ['**']
  release:
    types: [prereleased, released]
jobs:
  tests_and_docker_build:
    name: 'Run unit tests'
    runs-on: 'ubuntu-latest'
    strategy:
      matrix:
        python_version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
    env:
      BASE_IMAGE: "${{ vars.DOCKER_ORG }}/nansat:v1.6.1-python${{ matrix.python_version }}"
      IMAGE_NAME: "${{ vars.DOCKER_ORG }}/geospaas"
      latest: ${{ matrix.python_version == '3.11' && 'true' || '' }}
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASS }}

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build testing image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          target: base
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
          push: false
          load: true
          tags: testing
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: 'Run tests'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
             docker run --rm
             -v "$(pwd):/src"
             -e "GITHUB_ACTIONS=$GITHUB_ACTIONS"
             -e "GITHUB_REF=$GITHUB_REF"
             -e "GITHUB_SHA=$GITHUB_SHA"
             -e "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
             -e "GITHUB_REPOSITORY=$GITHUB_REPOSITORY"
             -e "GITHUB_RUN_ID=$GITHUB_RUN_ID"
             -e "GITHUB_TOKEN=$GITHUB_TOKEN"
             testing
             bash -c "coverage run --omit=geospaas/nansat_ingestor/tests/*,geospaas/catalog/tests/*,geospaas/vocabularies/tests/* runtests.py"

      - name: 'Install Python 3.11'
        if: ${{ env.latest }}
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 'Upload coverage to coveralls.io'
        if: ${{ env.latest }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pip install coveralls && coveralls --service=github

      - name: Build docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            BASE_IMAGE=${{ env.BASE_IMAGE }}
          push: ${{ github.ref_type == 'tag' }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.ref_name }}-python${{ matrix.python_version }}
            ${{ env.latest && format('{0}:{1}', env.IMAGE_NAME, github.ref_name) || '' }}
            ${{ env.IMAGE_NAME }}:latest-python${{ matrix.python_version }}
            ${{ env.latest && format('{0}:latest', env.IMAGE_NAME) || '' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache


  publish_python_package:
    name: Publish the Python package
    runs-on: 'ubuntu-latest'
    needs: 'tests_and_docker_build'
    if: github.event_name == 'release'
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Build package
        run: |
             pip install build
             python -m build

      - name: 'Deploy package to the Github release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: 'dist/*'
          file_glob: true
          tag: ${{ github.ref }}

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: ${{ vars.PYPI_REPOSITORY_URL }}
          password: ${{ secrets.PYPI_TOKEN }}
...