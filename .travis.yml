language: python
python:
  - '3.7'
services:
  - docker

# Environment variables defined as part of the Travis CI repository configuration are:
# - DOCKER_ORG: the docker hub organization (or user) to which the image will be pushed
# - DOCKER_USER: the docker hub user used to log in to the docker hub
# - DOCKER_PASS: the password of this user
# - PYPI_TOKEN: the token associated to the pypi account for deployment. More information can be found here: https://pypi.org/help/#apitoken
# - COVERALLS_REPO_TOKEN: authentication token for coveralls.io

env:
  global:
    - IMAGE_NAME="${DOCKER_ORG}/geospaas"

jobs:
  include:
    - stage: 'Unit tests'
      if: type = push
      env:
        - TEST_IMAGE="${IMAGE_NAME}:latest"
      install:
        - docker pull "${TEST_IMAGE}" || true
      script:
        - >
          docker run --rm
          -e COVERALLS_REPO_TOKEN
          -e "TRAVIS=true"
          -e TRAVIS_JOB_ID
          -e TRAVIS_BRANCH
          -e TRAVIS_PULL_REQUEST
          -v "$(pwd):/src"
          ${TEST_IMAGE}
          bash -c "source /opt/conda/bin/activate && coverage run --omit=geospaas/nansat_ingestor/tests/*,geospaas/catalog/tests/*,geospaas/vocabularies/tests/* runtests.py  && coveralls"
      deploy:
        - provider: pypi
          edge: true
          user: "__token__"
          password: "${PYPI_TOKEN}"
          on:
            tags: true

    - stage: 'Build Docker images'
      name: 'Build standard image'
      if: type = push
      env:
        - TAG='latest'
      install:
        - docker pull "${IMAGE_NAME}:${TAG}" || true
      script:
        - >
          docker build .
          --cache-from "${IMAGE_NAME}:${TAG}"
          --build-arg BASE_IMAGE="nansencenter/nansat:${TAG}"
          -t "${IMAGE_NAME}:tmp"
      before_deploy:
        - docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
      deploy:
        - provider: script
          on:
            tags: true
          script: /bin/bash scripts/docker_push.sh $TRAVIS_TAG latest

    - name: 'Build slim image'
      if: type = push
      env:
        - TAG='latest-slim'
      install:
        - docker pull "${IMAGE_NAME}:${TAG}" || true
      script:
        - >
          docker build .
          --cache-from "${IMAGE_NAME}:${TAG}"
          --build-arg BASE_IMAGE="nansencenter/nansat:${TAG}"
          -t "${IMAGE_NAME}:tmp"
      before_deploy:
        - docker login -u "$DOCKER_USER" -p "$DOCKER_PASS"
      deploy:
        - provider: script
          on:
            tags: true
          script: /bin/bash scripts/docker_push.sh "${TRAVIS_TAG}-slim" 'latest-slim'
